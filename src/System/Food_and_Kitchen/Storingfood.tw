:: storing [widget nobr]
/% Stores food in their respective "category". The first widget uses State.getVar so we can use one case instead of one case per each foodtype%/
<<widget "storefood">>
    <<for _index range $backpack>>
        <<set _positb to $backpack.findIndex(x => x.name === _index.name)>>

        <<switch $backpack[_positb].foodtype>>
            <<case "fruits" "meat" "vegetables" "liquids" "misc" "spices" "generalIng">>
                <<set _ftName to State.getVar("$"+ $backpack[_positb].foodtype)>>
                <<set _posit to _ftName.findIndex(x => x.name === $backpack[_positb].name)>>

                <<if !_ftName[_posit]>>
                    <<set _ftName.push(clone($backpack[_positb]))>>
                    <<set $backpack.deleteAt(_positb)>>

                <<elseif _ftName[_posit].name.includes($backpack[_positb].name)>>
                    <<set _ftName[_posit].amount += $backpack[_positb].amount>>
                    <<set $backpack.deleteAt(_positb)>>

                <</if>>
            <<default>>
                <<break>>
        <</switch>>
    <</for>>

<</widget>>

<<widget "storekitchentable">>
    <<set _fName to $args[0]>>
    <<set _location to State.getVar("$"+ $args[1])>>
    <<set _positIn to $kitchentable.findIndex(x => x.name === _fName)>>
    <<set _positOut to _location.findIndex(x => x.name === _fName)>>

    <<if !$kitchentable[_positIn]>>
        <<set $kitchentable.push(clone(_location[_positOut]))>>
        <<set _positIn to $kitchentable.findIndex(x => x.name === _fName)>>
        <<set $kitchentable[_positIn].amount to $moveAm>>

    <<elseif $kitchentable[_positIn]>>
        <<set $kitchentable[_positIn].amount += $moveAm>>

    <</if>>

    <<if _location[_positOut].amount is $moveAm>>
        <<set _location.deleteAt(_positOut)>>
    <<else>>
        <<set _location[_positOut].amount -= $moveAm>>
    <</if>>
    
    <<unset $moveAm>>
<</widget>>