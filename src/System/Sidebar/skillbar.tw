:: skillbar [widget nobr]
/* If you you think that I know what I've done here, oh boy you are so wrong.
   Or maybe not. It uses the getvar so it can concatenate the skill name to the "$". Making it more easy and doesn't need to write it manually for each skill.
   Saved me like 80 lines of code (Maybe they where 20 but shhhhh).
   The _skillname and _skillexpN length needs to be always the same number.
*/
<<widget "skillbar">> 
    <<set _skillname to ["programming", "cooking", "gardening", "art", "athletic", "weightlift", "handyman"]>>
    <<set _skillexpN to ["prog", "cook", "gard", "art", "athletic", "weightl", "handym"]>>
    
    <<for _i to 0; _i lt _skillname.length; _i++>>
        <<set _exp to State.getVar('$'+_skillexpN[_i]+'exp')>>
        <<set _expLeft to State.getVar('$'+_skillexpN[_i]+'expleft')>>
        <<set _skillBarN to _skillname[_i]+'b'>>

        <div style="margin-bottom: 8px;">
            <<print _skillname[_i].toUpperFirst()>> level: <span @id="_skillexpN[_i]"><<print '$'+_skillname[_i]+'skill'>></span>
            <br>
            <<progressbar _exp _expLeft _skillBarN>>
        </div>
    <</for>>

<</widget>>

<<widget "progressbar">> /* This is the progress bar. A pretty bar I tell you. With some green color and shit. Please refer to SugarCube Doc if you don't know what @id does. I didn't know but now I do :D */
    <<set _expval to $args[0]>>
    <<set _expleftval to $args[1]>>
    <<set _skill to $args[2]>>

    <<set _progress = Math.round((_expval/_expleftval)*100)>>
    <div @id="_skill">
    <div id="progressbar">
        <div id="bar" @style="'width:' + _progress + '%'"></div>
    </div>
    <h4 id="expnumber" style="padding:0; margin:0;">Exp: <<print _expval + "/" + _expleftval>></h4>
    </div>

<</widget>>