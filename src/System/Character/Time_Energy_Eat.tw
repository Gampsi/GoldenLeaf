:: statusnneeds [widget nobr]

<<widget "restoreEnergy">> /* This is some energy thing. The energy know where is it at all times.  It knows this because it knows where it isn't. By subtracting where it is from where it isn't, or where it isn't from where it is - whichever is greater - it obtains a difference or deviation. The guidance subsystem uses deviation to generate corrective commands to drive the energy from a position where it is to a position where it isn't, and arriving at a position that it wasn't, it now is.*/
    <<set $energy += $args[0]>>

    <<set $energy to Math.clamp($energy, 0, $maxenergy)>>
<</widget>>

<<widget "timeattached">> /% It's pretty self explanatory I think. args 1 in case we need to use an specific amount of energy or an string in case is skilling %/
    <<set _mult to 0.20>>

    <<if $args[3] is "chngMult">>
        <<set _mult to $args[2]>>
    <</if>>

    <<if typeof($args[1]) is "number">>
        <<set _uE to $args[1]>>
    <<else>>
        <<set _uE to $args[0] * _mult>>
    <</if>>

    <<if _disableToy is false>>
        <<wearSexToy "timeatt" $args[0]>>
    <</if>>
    
    <<set $energy -= Math.round(_uE); $energy to Math.clamp($energy, 0, $maxenergy)>>

    <<addminutes $args[0]>>

    <<if typeof($args[1]) is "string" and $args[2]>>
        <<addexp $args[1] $args[2]>>

    <<elseif typeof($args[2]) is "string" and $args[3]>>
        <<addexp $args[2] $args[3]>>
    <</if>>

<</widget>>

<<widget "eatFood">>/%The args need to be assigned as 0= Value to be used add energy. 1=Food index to delete it. 2= Location from where it came and will be deleted. %/
    <<set _value to $args[0]>>
    <<set _foodID to $args[1]>>
    <<set _location to State.getVar("$" + $args[2])>>
    
    <<if $args[2] is "kitchentable">>
        <<if $kitchentable[_foodID].foodtype.includes("Prepared Food")>>
            <<set _consUse to 1>>
        <<else>>
            <<set _consUse to setup.food[$args[2]][_location[_foodID].id].uses>>
        <</if>>
    <<else>>
        <<set _consUse to setup.food[$args[2]][_location[_foodID].id].uses>>
    <</if>>

    <<if _location[_foodID].amount gte 2>>
        <<if _location[_foodID].uses eq 1>>
            <<set _location[_foodID].amount -= 1>>
            <<set _location[_foodID].uses = _consUse>>

        <<elseif _location[_foodID].uses lte _consUse>>
            <<set _location[_foodID].uses -= 1>>
        <</if>>
        
    <<else>>
        <<if _location[_foodID].uses eq 1>>
            <<set _location.deleteAt(_foodID)>>
        <<else>>
            <<set _location[_foodID].uses -= 1>>
        <</if>>
            
    <</if>>

    <<set $energy += _value>>
    <<set $energy to Math.clamp($energy, 0, $maxenergy)>>

<</widget>>

/* Who are you, who is so wise in the ways of science */